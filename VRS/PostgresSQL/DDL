#CONNECT 'jdbc:postgresql://ec2-54-225-101-4.compute-1.amazonaws.com:5432/d473dqv367ur4k?username=zmmxgimazgcmky&password=_ijE3dNnY6iyWcdmpElG_NxQL3';

#postgres://zmmxgimazgcmky:_ijE3dNnY6iyWcdmpElG_NxQL3@ec2-54-225-101-4.compute-1.amazonaws.com:5432/d473dqv367ur4k


CREATE TABLE ROLES
(
    ROLE_ID    bigserial primary key,
    ROLE_NAME  VARCHAR(40) not null
);

CREATE TABLE ADMINS
(
    ADMIN_ID    bigserial primary key,
    ROLE_ID     bigint not null,
    ADMIN_EMAIL VARCHAR(40) UNIQUE not null,
    PASSWORD_HASH
    foreign key (ROLE_ID) references ROLES (ROLE_ID) ON UPDATE CASCADE ON DELETE SET NULL
);

CREATE TABLE SEX
(
    SEX_ID    bigserial primary key,
    SEX       VARCHAR(20) not null
);

CREATE TABLE CUSTOMERS
(
    CUSTOMER_ID    	serial primary key,
    LAST_NAME      	VARCHAR(20) not null,
    FIRST_NAME     	VARCHAR(20) not null,
    MIDLE_NAME     	VARCHAR(20) not null,
    CUSTOMER_EMAIL  VARCHAR(40) not null,
    CUSTOMER_PHONE  VARCHAR(12) not null,
    SEX_ID			integer     not null,    
    CUSTOMER_PHOTO	VARCHAR(40) not null,
    BONUS			double precision,
    foreign key (SEX_ID) references SEX (SEX_ID) OON UPDATE CASCADE ON DELETE SET NULL
);

CREATE TABLE CATEGORIES
(
    CATEGORY_ID    serial primary key,
    CATEGORY_NAME  VARCHAR(40) not null
);

CREATE TABLE FILMS in schema_name
(
    ID    		    serial primary key,
    TITLE      		text not null,
    YEAR       		integer not null,
    DESCRIPTION 	text not null,
    COVER			text not null,
    AMOUNT			integer not null,
    GENERAL_PRICE	bigint not null,
    RENT_PRICE		bigint not null,
    BONUS_FOR_RENT	bigint not null
);

CREATE TABLE FILM_CATEGORIES
(
    CATEGORY_ID    	integer REFERENCES CATEGORIES,
    FILM_ID        	integer REFERENCES FILMS,
    PRIMARY KEY 	(CATEGORY_ID, FILM_ID)
);


CREATE TABLE RENT
(
    RENT_ID                 bigserial primary key;
    CUSTOMER_ID    			INTEGER REFERENCES CUSTOMERS,
    RENTED_DATE				DATE NOT NULL
);


CREATE TABLE film_at_rent
(
    FILM_ID                 INTEGER REFERENCES FILMS,
    RENT_ID                 bigint REFERENCES FILMS,
    COUNT                   INTEGER NOT NULL,
    ACCEPTED_FUTURE_DATE    DATE NOT NULL,
    ACCEPTED_DATE           DATE,
    COPIES_LEFT             INTEGER NOT NULL,
    RIMARY KEY  (FILM_ID, RENT_ID)
);



